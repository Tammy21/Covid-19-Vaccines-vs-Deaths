[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Code\nimport pandas as pd\nimport numpy as np\nimport requests\nfrom pandas import Series, DataFrame\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nplt.rc('font', size=10)  \n%matplotlib inline"
  },
  {
    "objectID": "eda.html#analysis-plan",
    "href": "eda.html#analysis-plan",
    "title": "Exploratory Data Analysis",
    "section": "1 Analysis Plan",
    "text": "1 Analysis Plan\nFirstly we perform data retrieval (identifying data sources, defining important variables and relevant key performance indicators). Secondly, we will perform data processing which includes data transformation, data translation, checking consistency of data, data pre-processing, checking outliers and handling of missing values. Thirdly, we will perform Exploratory Data Analysis, make statistical summaries, and then data visualization of graphs. Then we will perform a hypothesis testing of vaccination vs total deaths.\n\n\nCode\nvaccine_df = pd.read_csv(\"dataset/country_vaccinations.csv\")\nvaccine_df.head(5)\n\n\n\n\n\n\n  \n    \n      \n      country\n      iso_code\n      date\n      total_vaccinations\n      people_vaccinated\n      people_fully_vaccinated\n      daily_vaccinations_raw\n      daily_vaccinations\n      total_vaccinations_per_hundred\n      people_vaccinated_per_hundred\n      people_fully_vaccinated_per_hundred\n      daily_vaccinations_per_million\n      vaccines\n      source_name\n      source_website\n    \n  \n  \n    \n      0\n      Afghanistan\n      AFG\n      2021-02-22\n      0.0\n      0.0\n      NaN\n      NaN\n      NaN\n      0.0\n      0.0\n      NaN\n      NaN\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n    \n      1\n      Afghanistan\n      AFG\n      2021-02-23\n      NaN\n      NaN\n      NaN\n      NaN\n      1367.0\n      NaN\n      NaN\n      NaN\n      34.0\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n    \n      2\n      Afghanistan\n      AFG\n      2021-02-24\n      NaN\n      NaN\n      NaN\n      NaN\n      1367.0\n      NaN\n      NaN\n      NaN\n      34.0\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n    \n      3\n      Afghanistan\n      AFG\n      2021-02-25\n      NaN\n      NaN\n      NaN\n      NaN\n      1367.0\n      NaN\n      NaN\n      NaN\n      34.0\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n    \n      4\n      Afghanistan\n      AFG\n      2021-02-26\n      NaN\n      NaN\n      NaN\n      NaN\n      1367.0\n      NaN\n      NaN\n      NaN\n      34.0\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/"
  },
  {
    "objectID": "eda.html#sample-data",
    "href": "eda.html#sample-data",
    "title": "Exploratory Data Analysis",
    "section": "2 Sample Data",
    "text": "2 Sample Data\nWe look at a sample to inspect the data. This steps gives us an early insight into the data that will be used in order to carry out the analysis.\nFeature selection is one the vital task to perform data analysis and exploration There are various statistical methods included in feature selection. In this project our motive is to focus on the vsccinstion rates and the total death. Hence, we select features which are closely related to this component. The OWID dataset has 65 variables. All the variables are not required for our analysis. We select only few variables here.\n\n\nCode\nsummary_df = pd.read_csv(\"dataset/worldometer_coronavirus_summary_data.csv\")\nsummary_df.head(5)\n\n\n\n\n\n\n  \n    \n      \n      country\n      continent\n      total_confirmed\n      total_deaths\n      total_recovered\n      active_cases\n      serious_or_critical\n      total_cases_per_1m_population\n      total_deaths_per_1m_population\n      total_tests\n      total_tests_per_1m_population\n      population\n    \n  \n  \n    \n      0\n      Afghanistan\n      Asia\n      179267\n      7690.0\n      162202.0\n      9375.0\n      1124.0\n      4420\n      190.0\n      951337.0\n      23455.0\n      40560636\n    \n    \n      1\n      Albania\n      Europe\n      275574\n      3497.0\n      271826.0\n      251.0\n      2.0\n      95954\n      1218.0\n      1817530.0\n      632857.0\n      2871945\n    \n    \n      2\n      Algeria\n      Africa\n      265816\n      6875.0\n      178371.0\n      80570.0\n      6.0\n      5865\n      152.0\n      230861.0\n      5093.0\n      45325517\n    \n    \n      3\n      Andorra\n      Europe\n      42156\n      153.0\n      41021.0\n      982.0\n      14.0\n      543983\n      1974.0\n      249838.0\n      3223924.0\n      77495\n    \n    \n      4\n      Angola\n      Africa\n      99194\n      1900.0\n      97149.0\n      145.0\n      NaN\n      2853\n      55.0\n      1499795.0\n      43136.0\n      34769277\n    \n  \n\n\n\n\n\n\nCode\ndaily_df = pd.read_csv(\"dataset/worldometer_coronavirus_daily_data.csv\")\ndaily_df.head(5)\n\n\n\n\n\n\n  \n    \n      \n      date\n      country\n      cumulative_total_cases\n      daily_new_cases\n      active_cases\n      cumulative_total_deaths\n      daily_new_deaths\n    \n  \n  \n    \n      0\n      2020-2-15\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n    \n      1\n      2020-2-16\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n    \n      2\n      2020-2-17\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n    \n      3\n      2020-2-18\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n    \n      4\n      2020-2-19\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n  \n\n\n\n\nSince vaccine_df is updated on a daily basis and an aggregation of all the dates (one single value for each country) is needed for better visualization.\nApplying aggregation function on total_vaccination column in Vaccine_df. Then, The max value of total_vaccinations of each country is selected (since data is cumulative,it is fine to consider max value)\n\n\nCode\ndef aggregate(df: pd.Series, agg_col: str) -> pd.DataFrame:\n    data = df.groupby(\"country\")[agg_col].max()\n    data = pd.DataFrame(data)\n    \n    return data\nprint([x for x in vaccine_df.country.unique() if x not in summary_df.country.unique()])\n\n\n['Antigua and Barbuda', 'Bonaire Sint Eustatius and Saba', 'Bosnia and Herzegovina', 'Brunei', 'Cape Verde', \"Cote d'Ivoire\", 'Czechia', 'Democratic Republic of Congo', 'England', 'Eswatini', 'Falkland Islands', 'Guernsey', 'Guinea-Bissau', 'Hong Kong', 'Isle of Man', 'Jersey', 'Kosovo', 'Macao', 'North Macedonia', 'Northern Cyprus', 'Northern Ireland', 'Palestine', 'Pitcairn', 'Saint Kitts and Nevis', 'Saint Vincent and the Grenadines', 'Sao Tome and Principe', 'Scotland', 'Sint Maarten (Dutch part)', 'Timor', 'Tokelau', 'Trinidad and Tobago', 'Turkmenistan', 'Turks and Caicos Islands', 'Tuvalu', 'United Kingdom', 'United States', 'Vietnam', 'Wales', 'Wallis and Futuna']"
  },
  {
    "objectID": "eda.html#data-cleaning",
    "href": "eda.html#data-cleaning",
    "title": "Exploratory Data Analysis",
    "section": "3 Data Cleaning",
    "text": "3 Data Cleaning\nIt is important to clean the data before performing visualization as it helps in improving the accuracy of plots and also results in uniformity of the data.\nFirstly, compare if there are any countries that exist in vaccine_df (Aggregated Vaccination Dataset) but miss in summary_df (Daily COVID-19 Cases Summary Dataset).\n\n\nCode\nprint([x for x in vaccine_df.country.unique() if x not in summary_df.country.unique()])\n\n\n['Antigua and Barbuda', 'Bonaire Sint Eustatius and Saba', 'Bosnia and Herzegovina', 'Brunei', 'Cape Verde', \"Cote d'Ivoire\", 'Czechia', 'Democratic Republic of Congo', 'England', 'Eswatini', 'Falkland Islands', 'Guernsey', 'Guinea-Bissau', 'Hong Kong', 'Isle of Man', 'Jersey', 'Kosovo', 'Macao', 'North Macedonia', 'Northern Cyprus', 'Northern Ireland', 'Palestine', 'Pitcairn', 'Saint Kitts and Nevis', 'Saint Vincent and the Grenadines', 'Sao Tome and Principe', 'Scotland', 'Sint Maarten (Dutch part)', 'Timor', 'Tokelau', 'Trinidad and Tobago', 'Turkmenistan', 'Turks and Caicos Islands', 'Tuvalu', 'United Kingdom', 'United States', 'Vietnam', 'Wales', 'Wallis and Futuna']\n\n\nIt is surprising to see that countries like the United States and the United Kingdom are missing in the Summary dataset, but upon observation, it was found that the Summary dataset consisted of abbreviations ‘USA’ and ‘UK’ instead of full names. Similarly few names were differently spelled. The following code snippet removes inconsistency in the dataset.\nvaccine_df.country = vaccine_df.country.replace().replace({ “Czechia”: “Czech Republic”, “United States”: “USA”, “United Kingdom”: “UK”, “Isle of Man”: “Isle Of Man”, “Republic of Ireland”: “Ireland”, “Northern Cyprus” : “Cyprus” })\nprint(These 4 countries are a part of UK) vaccine_df = vaccine_df[vaccine_df.country.apply(lambda x: x not in [‘England’, ‘Scotland’, ‘Wales’, ‘Northern Ireland’])]\n\n\n\n# Main Variables\nKey Metrics \n\nDeaths: How many deaths from COVID-19 have been reported? Is the number of deaths rising or falling? How does the death rate compare to other countries?\n\nVaccinations: How many vaccine doses are being administered each day? How many doses have been administered in total? What share of the population has been vaccinated?\n\n\n## Total Vaccinations per country grouped by Vaccines\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nfig = px.treemap(vaccine_df,names = 'country',values = 'total_vaccinations',\n                 path = ['vaccines','country'],\n                 title=\"Total Vaccinations per country grouped by Vaccines\",\n                 color_discrete_sequence =px.colors.qualitative.Set1)\nfig.show()\n\n\n                                                \n\n:::\nAccording to the above treemap, The top 5 Countries with vaccination rates are China, India, USA, Brazil and .\nThe progess of Covod-19 vaccines have been neven with stark disparities among countries of different income levels.According to Our World in data publication 80% of people in high-income countries had received at least one vaccine dose compared to only 23% of those in low-income countries. \nOur World in Data also publishes data on COVID-19 fatality rates, in which low-income countries also experience worse outcomes. As of Nov. 6, the cumulative case fatality rate was 2.12% in low-income countries, compared to 0.69% in high-income countries.\n\n\nCode\ndef plot_trend(dataframe,feature,title,country):\n    plt.style.use('ggplot')\n    plt.figure(figsize=(20,25))\n    \n    for i,country in enumerate(country):\n        plt.subplot(8,4,i+1)\n        data = dataframe[dataframe['country'] == country]\n        sns.lineplot(x=data['date'] ,y=data[feature],label = feature)\n        plt.xlabel('')\n        plt.tick_params(axis='x',which='both',top=False,bottom=False,labelbottom=False)\n        plt.title(country)\n        \n    plt.suptitle(title,y=1.05)\n    plt.tight_layout()\n    plt.show()\n\n\ncountry = ['Argentina', 'Austria', 'Belgium', 'Brazil','Canada','China','Czechia',\n           'Denmark', 'England','Finland', 'France','Germany','India','Ireland', \n           'Israel', 'Italy', 'Kuwait','Mexico', 'Netherlands','Norway', 'Poland',\n           'Russia','Saudi Arabia', 'Scotland','Singapore','Spain', 'Sweden',\n           'Switzerland', 'Turkey','United Arab Emirates', 'United Kingdom', 'United States']\n# plot_trend(vaccine_df,'total_vaccinations','Trend of total vaccination',country)\n\n\n\n\nCode\n# plot_trend(vaccine_df,'total_vaccinations','Trend of total vaccination',country)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Impact of Covid-19 Vaccines on Death-rates",
    "section": "",
    "text": "The COVID-19 pandemic has unleashed devastating health and economic crises worldwide, causing more than 3.9 million deaths and 183 million reported infections globally. The Covid-19 pandemic has impacted human lives and activities on all levels. Economically it has halted productions, suspended business activity, shifted product demands and it disrupted global supply chains and increased market volatility. Socially prolonged exposure to stress and increased community uneasiness affected quality of lives. Additionally, during the heat of the pandemic, people experienced critical conditions such as severe symptoms, a lack of hospital and intensive care unit beds, the loss of loved ones, tight curfews, and quarantine. As of 2022, the Covid-19 infection rates have reduced drastically in all countries, and people are almost leading normal lives with very few restrictions. People are still required to wear face masks in some designated areas for example in public transport and airports. The reduced infections rate and death rate can be safely attributed to the inception of Covid-19 vaccines. Covid-19 vaccines are intended to provide acquired immunity against severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). The Covid-19 and thus preventing severe symptomatic illness. In 2020, the first Covid-19 Vaccines were developed and made available to the public through emergency authorizations and conditional approvals. Initially, most Covid-19 vaccines were two-dose vaccines. However, immunity from the vaccines has been found to decrease over time, which led to the inception of Covid-19 Boosters to maintain immunity\n\n\nThe Covid-19 Vaccines are widely accredited for their role in reducing the spread of Covid-19 and reducing the severity and death caused by Covid-19. This project aims to explore the impact of Covid-19 vaccines on deathrates in different countries.\nIn this project we used 3 datasets for generating plots and insights. 1. Worldwide Daily Vaccination Data 2. Covid -19 Cases Summary Data 3. Covid-19 Daily Cases Data.\nThere is plenty of data available on various platforms regarding the vaccinations used world-wide. In this article, we will use the COVID-19 World Vaccination Progress( https://www.kaggle.com/datasets/gpreda/covid-world-vaccination-progress) along with Covid-19 Global Dataset(https://www.kaggle.com/datasets/josephassaker/covid19-global-dataset) which contains daily stats of new COVID cases. Using the above two mentioned datasets let us try to get an overview of how the world is fighting against this pandemic and the efficacy of vaccinations currently used.\n\n\n\nThe project has the following hypothesis:\n\nH0 = Covid-19 vaccines has an reduced the deathrates related to Covid-19 infection\nH1 = Covid-19 vaccines did not reduce the deathrates related to Covid-19 infection\n\n\n\n\nHow Vaccines Help\nVaccines contain weakened or inactive parts of a particular organism (antigen) that triggers an immune response within the body. Newer vaccines contain the blueprint for producing antigens rather than the antigen itself. Regardless of whether the vaccine is made up of the antigen itself or the blueprint so that the body will produce the antigen, this weakened version will not cause the disease in the person receiving the vaccine, but it will prompt their immune system to respond much as it would have on its first reaction to the actual pathogen.\n\n\n\nWhen someone is vaccinated, they are very likely to be protected against the targeted disease. But not everyone can be vaccinated. People with underlying health conditions that weaken their immune systems (such as cancer or HIV) or who have severe allergies to some vaccine components may not be able to get vaccinated with certain vaccines. These people can still be protected if they live in and amongst others who are vaccinated. When a lot of people in a community are vaccinated the pathogen has a hard time circulating because most of the people it encounters are immune. So the more that others are vaccinated, the less likely people who are unable to be protected by vaccines are at risk of even being exposed to the harmful pathogens. This is called herd immunity.\nThis is especially important for those people who not only can’t be vaccinated but may be more susceptible to the diseases we vaccinate against. No single vaccine provides 100% protection, and herd immunity does not provide full protection to those who cannot safely be vaccinated. But with herd immunity, these people will have substantial protection, thanks to those around them being vaccinated.\nVaccinating not one’s self, but also protects those in the community who are unable to be vaccinated\n\n\n\nVaccine Effectiviness"
  },
  {
    "objectID": "main_analysis.html",
    "href": "main_analysis.html",
    "title": "Main Analysis",
    "section": "",
    "text": "1 Sample Data\n\n\nCode\nvaccine_df = pd.read_csv(\"dataset/country_vaccinations.csv\")\nvaccine_df.head(5)\n\n\n\n\n\n\n  \n    \n      \n      country\n      iso_code\n      date\n      total_vaccinations\n      people_vaccinated\n      people_fully_vaccinated\n      daily_vaccinations_raw\n      daily_vaccinations\n      total_vaccinations_per_hundred\n      people_vaccinated_per_hundred\n      people_fully_vaccinated_per_hundred\n      daily_vaccinations_per_million\n      vaccines\n      source_name\n      source_website\n    \n  \n  \n    \n      0\n      Afghanistan\n      AFG\n      2021-02-22\n      0.0\n      0.0\n      NaN\n      NaN\n      NaN\n      0.0\n      0.0\n      NaN\n      NaN\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n    \n      1\n      Afghanistan\n      AFG\n      2021-02-23\n      NaN\n      NaN\n      NaN\n      NaN\n      1367.0\n      NaN\n      NaN\n      NaN\n      34.0\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n    \n      2\n      Afghanistan\n      AFG\n      2021-02-24\n      NaN\n      NaN\n      NaN\n      NaN\n      1367.0\n      NaN\n      NaN\n      NaN\n      34.0\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n    \n      3\n      Afghanistan\n      AFG\n      2021-02-25\n      NaN\n      NaN\n      NaN\n      NaN\n      1367.0\n      NaN\n      NaN\n      NaN\n      34.0\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n    \n      4\n      Afghanistan\n      AFG\n      2021-02-26\n      NaN\n      NaN\n      NaN\n      NaN\n      1367.0\n      NaN\n      NaN\n      NaN\n      34.0\n      Johnson&Johnson, Oxford/AstraZeneca, Pfizer/Bi...\n      World Health Organization\n      https://covid19.who.int/\n    \n  \n\n\n\n\n\n\nCode\nsummary_df = pd.read_csv(\"dataset/worldometer_coronavirus_summary_data.csv\")\nsummary_df.head(5)\n\n\n\n\n\n\n  \n    \n      \n      country\n      continent\n      total_confirmed\n      total_deaths\n      total_recovered\n      active_cases\n      serious_or_critical\n      total_cases_per_1m_population\n      total_deaths_per_1m_population\n      total_tests\n      total_tests_per_1m_population\n      population\n    \n  \n  \n    \n      0\n      Afghanistan\n      Asia\n      179267\n      7690.0\n      162202.0\n      9375.0\n      1124.0\n      4420\n      190.0\n      951337.0\n      23455.0\n      40560636\n    \n    \n      1\n      Albania\n      Europe\n      275574\n      3497.0\n      271826.0\n      251.0\n      2.0\n      95954\n      1218.0\n      1817530.0\n      632857.0\n      2871945\n    \n    \n      2\n      Algeria\n      Africa\n      265816\n      6875.0\n      178371.0\n      80570.0\n      6.0\n      5865\n      152.0\n      230861.0\n      5093.0\n      45325517\n    \n    \n      3\n      Andorra\n      Europe\n      42156\n      153.0\n      41021.0\n      982.0\n      14.0\n      543983\n      1974.0\n      249838.0\n      3223924.0\n      77495\n    \n    \n      4\n      Angola\n      Africa\n      99194\n      1900.0\n      97149.0\n      145.0\n      NaN\n      2853\n      55.0\n      1499795.0\n      43136.0\n      34769277\n    \n  \n\n\n\n\n\n\nCode\nsummary_df.info()\n\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 226 entries, 0 to 225\nData columns (total 12 columns):\n #   Column                          Non-Null Count  Dtype  \n---  ------                          --------------  -----  \n 0   country                         226 non-null    object \n 1   continent                       226 non-null    object \n 2   total_confirmed                 226 non-null    int64  \n 3   total_deaths                    218 non-null    float64\n 4   total_recovered                 204 non-null    float64\n 5   active_cases                    204 non-null    float64\n 6   serious_or_critical             145 non-null    float64\n 7   total_cases_per_1m_population   226 non-null    int64  \n 8   total_deaths_per_1m_population  218 non-null    float64\n 9   total_tests                     212 non-null    float64\n 10  total_tests_per_1m_population   212 non-null    float64\n 11  population                      226 non-null    int64  \ndtypes: float64(7), int64(3), object(2)\nmemory usage: 21.3+ KB\n\n\n\n\nCode\ndaily_df = pd.read_csv(\"dataset/worldometer_coronavirus_daily_data.csv\")\ndaily_df.head(5)\n\n\n\n\n\n\n  \n    \n      \n      date\n      country\n      cumulative_total_cases\n      daily_new_cases\n      active_cases\n      cumulative_total_deaths\n      daily_new_deaths\n    \n  \n  \n    \n      0\n      2020-2-15\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n    \n      1\n      2020-2-16\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n    \n      2\n      2020-2-17\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n    \n      3\n      2020-2-18\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n    \n      4\n      2020-2-19\n      Afghanistan\n      0.0\n      NaN\n      0.0\n      0.0\n      NaN\n    \n  \n\n\n\n\n\n\nCode\ndef aggregate(df: pd.Series, agg_col: str) -> pd.DataFrame:\n\n    data = df.groupby(\"country\")[agg_col].max()\n    data = pd.DataFrame(data)\n\n    return data\nprint([x for x in vaccine_df.country.unique() if x not in summary_df.country.unique()])\n\n\n['Antigua and Barbuda', 'Bonaire Sint Eustatius and Saba', 'Bosnia and Herzegovina', 'Brunei', 'Cape Verde', \"Cote d'Ivoire\", 'Czechia', 'Democratic Republic of Congo', 'England', 'Eswatini', 'Falkland Islands', 'Guernsey', 'Guinea-Bissau', 'Hong Kong', 'Isle of Man', 'Jersey', 'Kosovo', 'Macao', 'North Macedonia', 'Northern Cyprus', 'Northern Ireland', 'Palestine', 'Pitcairn', 'Saint Kitts and Nevis', 'Saint Vincent and the Grenadines', 'Sao Tome and Principe', 'Scotland', 'Sint Maarten (Dutch part)', 'Timor', 'Tokelau', 'Trinidad and Tobago', 'Turkmenistan', 'Turks and Caicos Islands', 'Tuvalu', 'United Kingdom', 'United States', 'Vietnam', 'Wales', 'Wallis and Futuna']\n\n\n\n\nCode\nprint([x for x in vaccine_df.country.unique() if x not in summary_df.country.unique()])\n\n\n['Antigua and Barbuda', 'Bonaire Sint Eustatius and Saba', 'Bosnia and Herzegovina', 'Brunei', 'Cape Verde', \"Cote d'Ivoire\", 'Czechia', 'Democratic Republic of Congo', 'England', 'Eswatini', 'Falkland Islands', 'Guernsey', 'Guinea-Bissau', 'Hong Kong', 'Isle of Man', 'Jersey', 'Kosovo', 'Macao', 'North Macedonia', 'Northern Cyprus', 'Northern Ireland', 'Palestine', 'Pitcairn', 'Saint Kitts and Nevis', 'Saint Vincent and the Grenadines', 'Sao Tome and Principe', 'Scotland', 'Sint Maarten (Dutch part)', 'Timor', 'Tokelau', 'Trinidad and Tobago', 'Turkmenistan', 'Turks and Caicos Islands', 'Tuvalu', 'United Kingdom', 'United States', 'Vietnam', 'Wales', 'Wallis and Futuna']\n\n\n\n\nCode\nvaccine_df.country = vaccine_df.country.replace().replace({\n    \"Czechia\": \"Czech Republic\", \n    \"United States\": \"USA\", \n    \"United Kingdom\": \"UK\", \n    \"Isle of Man\": \"Isle Of Man\",\n    \"Republic of Ireland\": \"Ireland\",\n    \"Northern Cyprus\" : \"Cyprus\"\n})\n \n#These 4 countries are a part of UK\nvaccine_df = vaccine_df[vaccine_df.country.apply(lambda x: x not in ['England', 'Scotland', 'Wales', 'Northern Ireland'])]\n\n\n\n\n2 Setting\nIn the following Analysis we examine how effective Covid-19 vaccines are at protecting people against risk of dying from Covid-19. Vaccine effectiveness have shown that receiving 2-3 doses of COVID-19 vaccine can reduce severe COVID-19 outcomes. A study that looked at outcomes among hospitalized patients during March - June 2022 found that Covid-19 was associated with a 90% reduction in risk for severe Covid-19 outcomes, including invasive mechanical ventilation and in-hospital deaths across variant periods.Vaccinated people who died were likely to be older, more likely to be immunocompromised and had more chronic medical conditions compared with unvaccinated case-patients.\n\n\n3 Death Rate Analysis\n\n\nCode\npx.scatter(summary_df.head(20), x='continent',y='total_deaths',\n           hover_data=['country', 'continent'],\n           color='total_deaths', size='total_deaths', size_max=40, log_y=True)\n\n\n\n                                                \n\n\n\nThe graph shows that the continent with the most Covid-19 related deaths is South America, followed by Europe then Asia.\nNorth America had the least number of deaths.\nOn 13 May 2020, it was reported that Latin America and the Caribbean had reported over 400,000 cases of COVID-19 infection with, 23,091 deaths. On 22 May 2020, citing the rapid - - increase of infections in Brazil, the World Health Organization declared South America the epicentre of the pandemic.[4][5]\nAs of 16 July 2021, South America had recorded 34,359,631 confirmed cases and 1,047,229 deaths from COVID-19. Due to a shortage of testing and medical facilities, it is believed that the outbreak is far larger than the official numbers show.\n\nReference: https://en.wikipedia.org/wiki/COVID-19_pandemic_in_South_America\n\n\n4 Death rate by Country\n\n\nCode\n# Country wise deaths\npx.bar(summary_df,x=\"country\", y=\"total_deaths\", height=400)\n\n\n\n                                                \n\n\n\n\nCode\n#We will create an aggregated dataset by aggreagting the required columns using previous function.\nsummary_cols = ['people_vaccinated', \n                     'people_vaccinated_per_hundred', \n                     'people_fully_vaccinated', \n                     'people_fully_vaccinated_per_hundred', \n                     'total_vaccinations_per_hundred', \n                     'total_vaccinations']\n \nsummary = summary_df.set_index(\"country\")\nvaccines = vaccine_df[['country', 'vaccines']].drop_duplicates().set_index('country')\nsummary = summary.join(vaccines)\n \nfor col in summary_cols:   \n   summary = summary.join(aggregate(vaccine_df, col))\n \n#Two aditional columns for better understanding\nsummary['percentage_vaccinated'] = summary.people_vaccinated / summary.population * 100\nsummary['tested_positive'] = summary.total_confirmed / summary.total_tests * 100\n\n\n\n\nCode\npx.scatter(summary, x=\"people_fully_vaccinated\", y=\"total_deaths\", height=400)\n\n\n\n                                                \n\n\n\nThe top 5 countries with the highest deaths are USA, Brazil, India, Mexico and Russia . from the below plot we can see.. that in the 0 people_fully_vaccinated, shows much deaths\n\n\n\nCode\nvaccinated_vs_deaths = summary[[\"people_fully_vaccinated\", \"total_deaths\"]].reset_index()\npx.scatter(vaccinated_vs_deaths, x=\"people_fully_vaccinated\", y=\"total_deaths\", height=400, color = \"country\")\n\n\n\n                                                \n\n\nThe scattter plot shows that more deaths were recorded for countries with less vaccinations. - For example USA had 217M people vaccinated and recorded one of the highest death rate values, whereas China has over 1.2b people vaccinated and fewer deaths recorded.\n\n\nCode\npx.choropleth(vaccine_df,\n              locations=\"iso_code\",\n              color=\"people_vaccinated\",\n              hover_name=\"country\",\n              color_continuous_scale=\"Blues\",\n              animation_frame=\"date\")\n\n\n\n                                                \n\n\nPress play on the map key to see the changes of Vccination rates in different countries as it changed over time\n\n\nCode\ndef fill_title_and_subtitle(title:str, subtitle:str):\n    return f\"{title}<br><sub>{subtitle}</sub>\"\n \ndef create_bar_chart(data: pd.DataFrame, xcolumn: str, ycolumn:str, title:str, colors:str, ylabel=\"Count\", n=None):\n    hovertemplate ='<br><b>%{x}</b>'+f'<br><b>{ylabel}: </b>'+'%{y}<br><extra></extra>'    \n    data = data.sort_values(ycolumn, ascending=False).dropna(subset=[ycolumn])        \n\n    if n is not None: \n        data = data.iloc[:n]\n    else:\n        n = \"\"\n    fig = go.Figure(go.Bar(\n                    hoverinfo='skip',\n                     x=data[xcolumn], \n                     y=data[ycolumn], \n                     hovertemplate = hovertemplate,\n                     marker=dict(\n                         color = data[ycolumn],\n                         colorscale=colors,\n                        ),\n                    ),\n                )\n\n    fig.update_layout(\n        title=title,\n        xaxis_title=f\"Top {n} {xcolumn.title()}\",\n        yaxis_title=ylabel,\n        plot_bgcolor='rgba(0,0,0,0)',\n        hovermode=\"x\"\n    )\n\n    fig.show()\n\n\n\n\nCode\ntitle = fill_title_and_subtitle(\"Total Deaths\", \"Countries with Highest Percentages of total deaths\")\n# create_bar_chart(summary.reset_index(), 'country', \"total_vaccinations\", title, \"viridis\", n=20 )\ntitle =(\"Total Vaccinated\")\ncreate_bar_chart(summary.reset_index(), 'country', \"total_vaccinations\", title, \"viridis\", n=20 )\n\n\n\n                                                \n\n\n\nThe above graph shows that top 5 vaccinated countries are China, India, USA, Brazil and Indonesia.\nIts very interesting, to see that China where the pandemic started is also the country with the most people vaccinated.\n\n\n\nCode\ntitle = fill_title_and_subtitle(\"Total Deaths\", \"Countries with Highest Percentages of total deaths\")\ncreate_bar_chart(summary.reset_index(), 'country', \"total_deaths\", title, \"twilight\", n=20 )\n\n\n\n                                                \n\n\nThe countries with the most deaths are USA, Brazil, India and Russia\n\n\nCode\ntitle = fill_title_and_subtitle(\"Percentage Vaccinated\", \"Countries with Highest Percentages of total population\")\ncreate_bar_chart(summary.reset_index(), 'country', \"percentage_vaccinated\", title, \"Blugrn\", n=20 )\n\n\n\n                                                \n\n\nIt is better to merge the Vaccination(vaccine_df) and Daily Cases (summary_df) datasets. Before combining, an aggregate of each column must be created to have aggregate data (In vaccine dataset, as noticed above, data is present for each country on each date.)\n\n\nCode\ndata = summary.dropna(subset=['serious_or_critical'])\ndata = data.reset_index()\ntitle = fill_title_and_subtitle(\"Serious or Critical Cases\", \"Number of people who are currently critically ill due to Covid-19\")\ncreate_bar_chart(data, 'country',\"serious_or_critical\", title, \"turbid\", n=20)\n\n\n\n                                                \n\n\nCountries with top critical cases are Brazil, Mexico and Indonesia\n\n\nCode\ntitle = (\"Death Rates\")\ndata = summary_df.copy()\ndata['death_rate'] =  (data['total_deaths']/data['total_confirmed'])*100\ndata = data.dropna(subset=['death_rate'])\nfig = px.scatter_geo(data, locations=\"country\", color=\"continent\",\nlocationmode='country names',\nhover_name=\"country\", size=\"death_rate\",\nprojection=\"natural earth\")\nfig.update_layout(title=title, title_x=0.45)\nfig.show()\n\n\n\n                                                \n\n\n\n\n5 Understanding Covid-19 vaccination with respect to time\n\n\nCode\nimport math\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# unique dates \ndates = vaccine_df.date.unique().tolist()\n#For more smoother animations\ndates.extend(['2020-12-12', '2020-12-13']) \n \n# unique countries \ncountries = vaccine_df.country.unique().tolist()\n \n# for easy processing \nshort = vaccine_df[['date', 'country', 'total_vaccinations']]\n \n# values of unqiue (date, country) already in short \n# i.e we want to make sure we have some data for each, even if it is 0 \nkeys= list(zip(short.date.tolist(), short.country.tolist()))\nfor date in dates:\n    for country in countries:\n        idx = (date, country)\n        if idx not in keys:\n            if date == min(dates):\n                # this means there's no entry for {country} on the earliest date \n                short = short.append({\n                    \"date\": date, \n                    \"country\": country, \n                    \"total_vaccinations\": 0\n                }, ignore_index=True)\n            else:\n                # entry for {country} is missing on a date other than the earliest\n                short = short.append({\n                    \"date\": date, \n                    \"country\": country, \n                    \"total_vaccinations\": pd.NA\n                }, ignore_index=True)\n\n#fill missing values with previous day values (this is OK since it is cumulative)\nshort = short.sort_values(['country', 'date'])\n \nshort.total_vaccinations = short.total_vaccinations.fillna(method='ffill')\n \n# scale the number by log to make the color transitions smoother\nvaccines = short.sort_values('date')\nvaccines['log_scale'] = vaccines['total_vaccinations'].apply(lambda x : math.log2(x+1))\n\n\n\nChina had the highest vaccination rates despite being the centre of the pandemc outbreak.\nIn other countries the rate seems to be lagging a little bit.\n\n\n\nCode\ncountries = short.groupby('country')['total_vaccinations'].max().sort_values(ascending=False)[:10].index.tolist()\n\ntitle = fill_title_and_subtitle(\"Vaccination Progress\", \"Rate of vaccination for top-10 vaccinated countries\")\n\n#title = (\"Vaccination Progress\") \nline_plots = []\n\nfor c in countries:\n    vacc_data = short[short.country == c]\n    line_plots.append(\n        go.Scatter(\n            name = c,\n            x = vacc_data.date,\n            mode='lines+markers',\n            y=vacc_data['total_vaccinations'],\n            )\n        )\n\nfig = go.Figure(line_plots)\n\nfig.update_layout(\n    title =title,\n    yaxis_title=\"Count\",\n    hovermode='x',\n    legend_orientation='h')\n\n\n\n                                                \n\n\n\n\n6 Cumulative Statistics\n\n\nCode\nfrom datetime import datetime\nvaccs=vaccine_df.copy()\ndaily=daily_df.copy()\ndaily.head()\n# standardise the dates \nvaccs.date =vaccs.date.apply(lambda x: datetime.strptime(x, \"%Y-%m-%d\"))\ndaily.date =daily.date.apply(lambda x: datetime.strptime(x, \"%Y-%m-%d\"))\n \n# use only common countries and dates \ncountries = vaccs.dropna(subset=['daily_vaccinations'])['country'].unique()\ndates = vaccs.dropna(subset=['daily_vaccinations'])['date'].unique()\ncountry_mask = daily.country.apply(lambda x: x in countries)\ndate_mask = daily.date.apply(lambda x: x in dates)\n \n# generate the visualization data \ncolumns_to_sum = ['daily_new_cases', 'cumulative_total_cases', 'cumulative_total_deaths', 'active_cases']\ndaily_cases = daily[country_mask & date_mask].groupby('date')[columns_to_sum].sum()\ndaily_vaccs = vaccs.groupby('date')[[ 'daily_vaccinations']].sum()\n \n# make it a dataframe for convenience  \ndata = pd.DataFrame(daily_cases).join(pd.DataFrame(daily_vaccs))\n \n# bring back the vaccine data we prepared in the previous section \ncumulative_vaccines = pd.DataFrame(vaccines.groupby('date')['total_vaccinations'].sum())\ndata = data.join(cumulative_vaccines).reset_index()\n\n\n\n\n7 Vaccination vs Cases\n\n\nCode\ntitle = fill_title_and_subtitle(\"Vaccine vs Virus\", \"Comparing the total number of daily new cases and daily vaccinations globally\")\nfig = go.Figure(data=[\n                go.Bar(\n                    name=\"New Cases\",\n                    x=data['date'], \n                    y=data['daily_new_cases'],\n                    marker_color=\"crimson\",\n                ),\n                go.Bar(\n                    name=\"Vaccinated\",\n                    x=data['date'], \n                    y=data['daily_vaccinations'],\n                    marker_color=\"lightseagreen\"\n                ),\n \n            ])\n \nfig.update_layout(\n        title=title,\n        xaxis_title=\"Date\",\n        yaxis_title=\"Count\",\n        plot_bgcolor='rgba(0,0,0,0)',\n        barmode='stack',\n        hovermode=\"x\"\n    )\n \nfig.show()\n\n\n\n                                                \n\n\nAccording to the graph above, as the Covd-19 vaccination rates increases, the prevalence of new cases is drastically low, indicating the effectiveness of Covd-19 in mitigating the severe impacts of the pandemic.\n\n\n8 Conclusion\nThe hypothesis H0 = Covid-19 vaccines has an reduced the deathrates related to Covid-19 infection is true According to the graphh below, although Covid-19 Cases were increasing, the more the people got vaccinated, led to a reduction in death-rates.\nHowever, vaccines were not the only contributing factor to mitigating the fatalities of the pandemic. The national lockdowns, quarrantines and wearing of masks and community hygiene also played a pivotal role.\n\n\n9 Call to Action\nVaccines have proven to be quite effective in harnessing pandemics, However the inception faces a lot resistance from the public, therefore more awareness programs should be put in place so that acceptance is high and fatalities are reduced.\n\n\nCode\ntitle = fill_title_and_subtitle(\"The Race Against Covid\", \"Visualizing Cumulative Statistics of Disease vs Vaccine\")\n \nfig = go.Figure(data=[\n                go.Scatter(\n                    mode=\"lines+markers\",\n                    name=\"Total Deaths\",\n                    x=data['date'], \n                    y=data['cumulative_total_deaths'],\n                    marker_color=\"crimson\",\n                ),\n                go.Scatter(\n                    mode=\"lines+markers\",\n                    name=\"Total Cases\",\n                    x=data['date'], \n                    y=data['cumulative_total_cases'],\n                    marker_color=\"royalblue\"\n                ),\n\n                go.Scatter(\n                    mode=\"lines+markers\",\n                    name=\"Total Vaccinated\",\n                    x=data['date'], \n                     y=data['daily_vaccinations'],\n                    marker_color=\"lightseagreen\"\n                ),\n            ])\n \nfig.update_layout(\n        title = title,\n        xaxis_title=\"\",\n        yaxis_title=\"Count\",\n        hovermode=\"x\",\n    legend_orientation='h'\n)\nfig.show()"
  },
  {
    "objectID": "understanding.html",
    "href": "understanding.html",
    "title": "Understanding The Datasets",
    "section": "",
    "text": "OWID: OWID could be the right data source for this analysis. It auto extracts data from JHU and WHO which are in turn getting daily data from respective country health authorities and they are reliable. It has all the required variables for analysis starting from deaths rate and its attributes, population, vaccination rates, and total death per million. Link: https://github.com/owid/covid-19-data/raw/master/public/data/owid-covid-data.csv\n\n\n\nCases: How many new cases are being confirmed each day? How many cases have been confirmed since the pandemic started? How is the number of cases changing?\nDeaths: How many deaths from COVID-19 have been reported? Is the number of deaths rising or falling? How does the death rate compare to other countries?\nVaccinations: How many vaccine doses are being administered each day? How many doses have been administered in total? What share of the population has been vaccinated?\nDeath rates per million population ( for a specific period – peak pandemic and off-peak time)\nGDP\n\n\n\n\n\nHospital Personnel\nGovernment\nFamilies"
  }
]