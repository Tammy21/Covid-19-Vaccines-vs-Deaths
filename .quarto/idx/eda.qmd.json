{"title":"Exploratory Data Analysis","markdown":{"yaml":{"title":"Exploratory Data Analysis","toc":true,"number-sections":true,"format":{"html":{"code-fold":true}},"jupyter":"python3"},"headingText":"Analysis Plan","containsRefs":false,"markdown":"\n\n```{python}\n\nimport pandas as pd\nimport numpy as np\nimport requests\nfrom pandas import Series, DataFrame\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objs as go\nplt.rc('font', size=10)  \n%matplotlib inline\n```\n\n\nFirstly we perform data retrieval (identifying data sources, defining important variables and relevant key performance indicators). Secondly, we will perform data processing which includes data transformation, data translation, checking consistency of data, data pre-processing, checking outliers and handling of missing values. Thirdly, we will perform Exploratory Data Analysis, make statistical summaries, and then data visualization of graphs. Then we will perform a hypothesis testing of vaccination  vs total deaths.\n\n```{python}\nvaccine_df = pd.read_csv(\"dataset/country_vaccinations.csv\")\nvaccine_df.head(5)\n```\n\n## Sample Data\n\nWe look at a sample to inspect the data. This steps gives us an early insight into the data that will be used in order to carry out the analysis.\n\nFeature selection is one the vital task to perform data analysis and exploration There are various statistical methods included in feature selection. In this project our motive is to focus on the vsccinstion rates and the total death. Hence, we select features which are closely related to this component. The OWID dataset has 65 variables. All the variables are not required for our analysis. We select only few variables here.\n\n```{python}\nsummary_df = pd.read_csv(\"dataset/worldometer_coronavirus_summary_data.csv\")\nsummary_df.head(5)\n```\n\n\n```{python}\ndaily_df = pd.read_csv(\"dataset/worldometer_coronavirus_daily_data.csv\")\ndaily_df.head(5)\n```\n\n\nSince vaccine_df is updated on a daily basis and an aggregation of all the dates (one single value for each country) is needed for better visualization. \n\nApplying aggregation function on total_vaccination column in Vaccine_df. Then, The max value of total_vaccinations of each country is selected (since data is cumulative,it is fine to consider max value)\n\n\n```{python}\ndef aggregate(df: pd.Series, agg_col: str) -> pd.DataFrame:\n    data = df.groupby(\"country\")[agg_col].max()\n    data = pd.DataFrame(data)\n    \n    return data\nprint([x for x in vaccine_df.country.unique() if x not in summary_df.country.unique()])\n```\n\n## Data Cleaning\nIt is important to clean the data before performing visualization as it helps in improving the accuracy of plots and also results in uniformity of the data.\n\nFirstly, compare if there are any countries that exist in vaccine_df (Aggregated Vaccination Dataset) but miss in summary_df (Daily COVID-19 Cases Summary Dataset).\n\n\n```{python}\nprint([x for x in vaccine_df.country.unique() if x not in summary_df.country.unique()])\n```\n\n\n It is surprising to see that countries like the United States and the United Kingdom are missing in the Summary dataset, but upon observation, it was found that the Summary dataset consisted of abbreviations 'USA' and 'UK' instead of full names. Similarly few names were differently spelled. The following code snippet removes inconsistency in the dataset.\n\n\n ```{python}\n vaccine_df.country = vaccine_df.country.replace().replace({\n    \"Czechia\": \"Czech Republic\", \n    \"United States\": \"USA\", \n    \"United Kingdom\": \"UK\", \n    \"Isle of Man\": \"Isle Of Man\",\n    \"Republic of Ireland\": \"Ireland\",\n    \"Northern Cyprus\" : \"Cyprus\"\n})\n\nprint(These 4 countries are a part of UK)\nvaccine_df = vaccine_df[vaccine_df.country.apply(lambda x: x not in ['England', 'Scotland', 'Wales', 'Northern Ireland'])]\n\n```\n\n\n# Main Variables\nKey Metrics \n\nDeaths: How many deaths from COVID-19 have been reported? Is the number of deaths rising or falling? How does the death rate compare to other countries?\n\nVaccinations: How many vaccine doses are being administered each day? How many doses have been administered in total? What share of the population has been vaccinated?\n\n\n## Total Vaccinations per country grouped by Vaccines\n\n\n```{python}\nfig = px.treemap(vaccine_df,names = 'country',values = 'total_vaccinations',\n                 path = ['vaccines','country'],\n                 title=\"Total Vaccinations per country grouped by Vaccines\",\n                 color_discrete_sequence =px.colors.qualitative.Set1)\nfig.show()\n```\n\n\nAccording to the above treemap, The top 5 Countries with vaccination rates are China, India, USA, Brazil and .\n\nThe progess of Covod-19 vaccines have been neven with stark disparities among countries of different income levels.According to Our World in data publication  80% of people in high-income countries had received at least one vaccine dose compared to only 23% of those in low-income countries.\n![image.png](images/48d69d60-9053-4184-9c50-b8819b180508.png)\n \n \nOur World in Data also publishes data on COVID-19 fatality rates, in which low-income countries also experience worse outcomes. As of Nov. 6, the cumulative case fatality rate was 2.12% in low-income countries, compared to 0.69% in high-income countries.\n\n\n```{python}\ndef plot_trend(dataframe,feature,title,country):\n    plt.style.use('ggplot')\n    plt.figure(figsize=(20,25))\n    \n    for i,country in enumerate(country):\n        plt.subplot(8,4,i+1)\n        data = dataframe[dataframe['country'] == country]\n        sns.lineplot(x=data['date'] ,y=data[feature],label = feature)\n        plt.xlabel('')\n        plt.tick_params(axis='x',which='both',top=False,bottom=False,labelbottom=False)\n        plt.title(country)\n        \n    plt.suptitle(title,y=1.05)\n    plt.tight_layout()\n    plt.show()\n\n\ncountry = ['Argentina', 'Austria', 'Belgium', 'Brazil','Canada','China','Czechia',\n           'Denmark', 'England','Finland', 'France','Germany','India','Ireland', \n           'Israel', 'Italy', 'Kuwait','Mexico', 'Netherlands','Norway', 'Poland',\n           'Russia','Saudi Arabia', 'Scotland','Singapore','Spain', 'Sweden',\n           'Switzerland', 'Turkey','United Arab Emirates', 'United Kingdom', 'United States']\n# plot_trend(vaccine_df,'total_vaccinations','Trend of total vaccination',country)\n```\n\n\n```{python}\n# plot_trend(vaccine_df,'total_vaccinations','Trend of total vaccination',country)\n```"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"number-sections":true,"output-file":"eda.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.189","theme":"cosmo","title":"Exploratory Data Analysis","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}}}